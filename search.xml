<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XDU程序设计基础1_高精度计算</title>
      <link href="/2023/04/06/XDU%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%801_%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/"/>
      <url>/2023/04/06/XDU%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%801_%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1>程序设计基础课程设计 1</h1><h3 id="问题描述">问题描述</h3><ul><li>涉及知识点：数组、流程控制、函数等</li><li>要求：用整形数组表示10进制大整数（超过2^32的整数），数组的每个元素存储大整数的一位数字，实现大整数的加减法。</li></ul><h3 id="问题分析">问题分析</h3><ol><li>大整数无法使用常规的整数类型进行表示，需要考虑使用字符串对输入的大整数进行存储。</li><li>加减运算的模拟可以通过与竖式计算类比来实现。</li><li>两个数字的正负号及运算符共有 8 种组合方式，可以转换成 4 种正数之间的加减运算。</li></ol><h3 id="数据类型">数据类型</h3><ul><li>整型数组</li><li>字符型数组</li></ul><h3 id="处理方法设计">处理方法设计</h3><ol><li>首先使用字符串存储输入两个带符号的大整数；</li><li>然后对两个字符串的第一位的符号位进行提取并记录，如果第一位为“ - ”，则认为该整数为负数，否则为正数，同时将数字倒序以整型数组的方式储存；</li><li>随后根据两个大整数的符号以及选择的运算符进行条件判断，跳转到符合其条件的逻辑结构；</li><li>进行加减运算时，从最低位依次向最高位处理，计算结果存储到 int 类型的 result 数组中；</li><li>将 result 数组中的结果倒序输出，忽略前导零，并在结果中添加符号。</li></ol><h3 id="测试数据设计">测试数据设计</h3><table><thead><tr><th style="text-align:center">第一个数</th><th style="text-align:center">第二个数</th><th style="text-align:center">  运算符  </th></tr></thead><tbody><tr><td style="text-align:center">88888888888888888888888888888888</td><td style="text-align:center">6666666666666666666666666666666666</td><td style="text-align:center">+</td></tr><tr><td style="text-align:center">1111111111111111111111111</td><td style="text-align:center">-9999999999999999999</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">-88888888888888888888888888888888</td><td style="text-align:center">-666666666666666666666666666666666666</td><td style="text-align:center">+</td></tr><tr><td style="text-align:center">-11111111111111111111111111</td><td style="text-align:center">222222222222222222222222222222222222</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">99999999999999999999999999999999</td><td style="text-align:center">-1111111111111111111111111</td><td style="text-align:center">+</td></tr><tr><td style="text-align:center">33333333333333333333333</td><td style="text-align:center">666666666666666666666666666666666666</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">-55555555555555555555555555555555</td><td style="text-align:center">9999999999999999999999999</td><td style="text-align:center">+</td></tr><tr><td style="text-align:center">-6666666666666666666666666</td><td style="text-align:center">-555555555555555555555555555555555555</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">999999999999999999999999999999</td><td style="text-align:center">1</td><td style="text-align:center">+</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">77777777777777777777777777777</td><td style="text-align:center">-</td></tr></tbody></table><h3 id="测试结果及分析">测试结果及分析</h3><p><a href="https://imgse.com/i/ppoOqrF"><img src="https://s1.ax1x.com/2023/04/06/ppoOqrF.png" alt="测试数据一"></a></p><p><a href="https://imgse.com/i/ppoOICq"><img src="https://s1.ax1x.com/2023/04/06/ppoOICq.png" alt="测试数据二"></a></p><p><a href="https://imgse.com/i/ppoO7vT"><img src="https://s1.ax1x.com/2023/04/06/ppoO7vT.png" alt="测试数据三"></a></p><p><a href="https://imgse.com/i/ppoOo80"><img src="https://s1.ax1x.com/2023/04/06/ppoOo80.png" alt="测试数据四"></a></p><p><a href="https://imgse.com/i/ppoOT2V"><img src="https://s1.ax1x.com/2023/04/06/ppoOT2V.png" alt="测试数据五"></a></p><p><a href="https://imgse.com/i/ppoObKU"><img src="https://s1.ax1x.com/2023/04/06/ppoObKU.png" alt="测试数据六"></a></p><p><a href="https://imgse.com/i/ppoOLb4"><img src="https://s1.ax1x.com/2023/04/06/ppoOLb4.png" alt="测试数据七"></a></p><p><a href="https://imgse.com/i/ppoOXVJ"><img src="https://s1.ax1x.com/2023/04/06/ppoOXVJ.png" alt="测试数据八"></a></p><p><a href="https://imgse.com/i/ppoOja9"><img src="https://s1.ax1x.com/2023/04/06/ppoOja9.png" alt="测试数据九"></a></p><p><a href="https://imgse.com/i/ppoOv5R"><img src="https://s1.ax1x.com/2023/04/06/ppoOv5R.png" alt="测试数据十"></a></p><h3 id="代码实现">代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//程序设计基础_1 高精度计算</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> num_1[<span class="number">101</span>], num_2[<span class="number">101</span>], op;</span><br><span class="line"><span class="type">int</span> first[<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;, second[<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;, result[<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> sym_1 = <span class="number">0</span>, sym_2 = <span class="number">0</span>, len_1 = <span class="number">0</span>, len_2 = <span class="number">0</span>, lenMax = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将字符数组转换成整型数组 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">translate</span><span class="params">(<span class="type">char</span> input[], <span class="type">int</span> result[])</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(input); i++) &#123;</span><br><span class="line">result[i] = input[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断两个数的相对大小 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isBigger</span><span class="params">(<span class="type">int</span> first[], <span class="type">int</span> second[])</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(len_1 &gt; len_2) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( len_1 &lt; len_2) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = lenMax - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (first[i] &lt; second[i]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (first[i] &gt; second[i]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绝对值减法，用于计算两数绝对值的差</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">absoluteMinus</span><span class="params">(<span class="type">int</span> first[], <span class="type">int</span> second[])</span> &#123;</span><br><span class="line"><span class="type">int</span> i, res;</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; lenMax; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(first[i] &lt; second[i]) &#123;</span><br><span class="line">first[i + <span class="number">1</span>] -= <span class="number">1</span>;</span><br><span class="line">res = first[i] - second[i] + <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res = first[i] - second[i];</span><br><span class="line">&#125;</span><br><span class="line">result[i] = res;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整的减法，运算结果带有符号</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">minus</span><span class="params">(<span class="type">int</span> first[], <span class="type">int</span> second[])</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(isBigger(first,second)) &#123;</span><br><span class="line">absoluteMinus(first, second);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">absoluteMinus(second, first);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通的加法 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> first[], <span class="type">int</span> second[])</span> &#123;</span><br><span class="line"><span class="type">int</span> i, res, step;</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt;= lenMax; i++) &#123;</span><br><span class="line">res = first[i] + second[i] + step;</span><br><span class="line">        step = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">if</span>(res &gt; <span class="number">9</span>) &#123;</span><br><span class="line">res %= <span class="number">10</span>;</span><br><span class="line">step = <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line">result[i] += res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化数据 ，储存符号，将字符串转换为整型数组，同时将数字从左到右以个十百千万的顺序排放</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initNum</span><span class="params">(<span class="type">char</span> num[], <span class="type">int</span> order)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(num[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (order == <span class="number">1</span>) &#123;</span><br><span class="line">sym_1 = <span class="number">-1</span>;</span><br><span class="line">len_1 = <span class="built_in">strlen</span>(num);</span><br><span class="line">num = strrev(num);</span><br><span class="line">len_1 -=<span class="number">1</span>;</span><br><span class="line">num[len_1] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">translate(num, first);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( order == <span class="number">2</span>) &#123;</span><br><span class="line">sym_2 = <span class="number">-1</span>;</span><br><span class="line">len_2 = <span class="built_in">strlen</span>(num);</span><br><span class="line">num = strrev(num);</span><br><span class="line">len_2 -= <span class="number">1</span>;</span><br><span class="line">num[len_2] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">translate(num, second);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(order == <span class="number">1</span>) &#123;</span><br><span class="line">sym_1 = <span class="number">1</span>;</span><br><span class="line">num = strrev(num);</span><br><span class="line">len_1 = <span class="built_in">strlen</span>(num);</span><br><span class="line">translate(num, first);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (order == <span class="number">2</span>) &#123;</span><br><span class="line">sym_2 = <span class="number">1</span>;</span><br><span class="line">num = strrev(num);</span><br><span class="line">len_2 = <span class="built_in">strlen</span>(num);</span><br><span class="line">translate(num, second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断计算类型 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">judge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> type = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span> &amp;&amp; sym_1 == <span class="number">1</span> &amp;&amp; sym_2 == <span class="number">1</span>) type = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span> &amp;&amp; sym_1 == <span class="number">1</span> &amp;&amp; sym_2 == <span class="number">-1</span>)type = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span> &amp;&amp; sym_1 == <span class="number">-1</span> &amp;&amp; sym_2 == <span class="number">-1</span>)type = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span> &amp;&amp; sym_1 == <span class="number">-1</span> &amp;&amp; sym_2 == <span class="number">1</span>)type = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span> &amp;&amp; sym_1 == <span class="number">1</span> &amp;&amp; sym_2 == <span class="number">-1</span>)type = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span> &amp;&amp; sym_1 == <span class="number">1</span> &amp;&amp; sym_2 == <span class="number">1</span>)type = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span> &amp;&amp; sym_1 == <span class="number">-1</span> &amp;&amp; sym_2 == +<span class="number">1</span>)type = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span> &amp;&amp; sym_1 == <span class="number">-1</span> &amp;&amp; sym_2 == <span class="number">-1</span>)type = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (type) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:add(first, second);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">add(first, second);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:minus(first, second);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:minus(second, first);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出操作提示 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个整数：\n&quot;</span>);</span><br><span class="line">gets(num_1);</span><br><span class="line">gets(num_2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择运算符（+/-）：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;op);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出不带符号的运算结果 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> isZero = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (result[i] != <span class="number">0</span>) &#123;</span><br><span class="line">isZero = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>( ; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,result[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(isZero) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">start();</span><br><span class="line">initNum(num_1, <span class="number">1</span>);</span><br><span class="line">initNum(num_2, <span class="number">2</span>);</span><br><span class="line">lenMax = len_1 &gt; len_2 ? len_1:len_2;</span><br><span class="line">judge();</span><br><span class="line">output();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> -学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -C语言 -程序设计基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio中的引用布局和自定义控件</title>
      <link href="/2023/03/29/Android_Studio%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E5%B8%83%E5%B1%80%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
      <url>/2023/03/29/Android_Studio%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E5%B8%83%E5%B1%80%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="引用布局">引用布局</h2><p>当程序的多个页面都有相同的布局时，可以通过引用布局的方式复用代码。</p><p>新建布局 title.xml，在当中写好需要重复的布局。在 activity_main.xml 文件中添加代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span> = <span class="string">&quot;@layout/title&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>如果添加的是标题栏，还需要在 MainActivity.java 手动隐藏掉默认的标题栏，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">ActionBar</span> <span class="variable">actionbar</span> <span class="operator">=</span> getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span>(actionbar != <span class="literal">null</span>)</span><br><span class="line">            actionbar.hide();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过调用 getSupportActionBar() 方法来获得 ActionBar 的实例；</p><p>然后调用 ActionBar 的 hide() 方法将系统自带的标题栏隐藏。</p><h2 id="自定义控件">自定义控件</h2><p>通过引用布局，我们实现了布局的复用，但如果需要让布局中的控件响应操作，还需要在活动中添加相应的代码。如果这些控件的作用相同，那么可以使用自定义控件来复用代码。</p><h3 id="创建自定义控件">创建自定义控件</h3><p>首先新建 TitleLayout.java 文件，并让它继承自 LinearLayout，添加代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TitleLayout</span> <span class="keyword">extends</span> <span class="title class_">LinearLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TitleLayout</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        Layoutinflater.from(context).inflate(R.layout.title, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先重写LinerLayout带有两个参数的构造方法。第一个参数用于获取上下文，也就是活动当前的状态；第二个参数中的 @Nullable 是一个注解，表示可以为空值（null）。Attribute意为属性，AttributeSet类型的参数接受布局文件（xml）中各种控件的属性，例如 layout_width、text 等。</p><p>super()用于访问父类中具有相同参数的构造方法。super必须写在构造方法的第一行。</p><p>在构造方法中需要对引用的布局动态加载（什么是动态加载？），需要用到 LayoutIflater 类。</p><p>LayoutInflater 是一个抽象类，不能通过 <code>new</code> 的方式获得实例对象。因此需要使用 from(context) 方法，获取与当前Context绑定的 LayoutInflater 实例。接下来调用 inflate() 方法将布局文件转换成对应的View对象。在这里 inflate() 有两个参数，第一个参数为 @LayoutRes int resource,为需要添加的布局文件的 Id，我们在这里使用 R.layout.title；第二个参数是 @Nullable ViewGroup root，也就是所添加布局的父布局，这里我们的父布局是 TitleLayout，所以直接传入 this 即可。</p><h3 id="添加自定义控件">添加自定义控件</h3><p>现在我们就可以在 activity_main.xml 文件中添加自定义控件了。方法和添加 <code>&lt;Button&gt;</code> 和 <code>&lt;TextView&gt;</code> 是类似的。不同的是必须写出完整的包名。示例代码如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.example.uicustomviews.TitleLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注册操作事件">注册操作事件</h3><p>为了使自定义控件中的内容能够相应我们的操作，还需要在 TitleLayout.java 文件中注册事件。示例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TitleLayout</span> <span class="keyword">extends</span> <span class="title class_">LinearLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TitleLayout</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title, <span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">back</span> <span class="operator">=</span> (Button) findViewById(R.id.back);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">edit</span> <span class="operator">=</span> (Button) findViewById(R.id.edit);</span><br><span class="line"></span><br><span class="line">        back.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                ((Activity) getContext()).finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//setOnClickListener的参数也可以写成new View.OnClickListener()</span></span><br><span class="line">        edit.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                Toast.makeText(getContext(), <span class="string">&quot;You clicked Edit button!&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当中，setOnClickListener() 方法为按钮注册了一个监听器，然后传入新建的 OnClickListener 对象。OnClickListener 是一个接口，这里通过匿名内部类的方式重写onClick方法，以此来实现按钮的点击事件。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于一些物理概念</title>
      <link href="/2023/03/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%89%A9%E7%90%86%E9%87%8F/"/>
      <url>/2023/03/21/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%89%A9%E7%90%86%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>  开学已经一个多月了，摆的程度相比上学期只能说有增无减。太久没有学习，感觉脑子都要萎缩了。期中考试在即，所以在此梳理一下一些（曾经）有疑问的一些概念。</p><h2 id="量纲">量纲</h2><h2 id="加速度">加速度</h2><p>  中学时我们主要研究直线运动，所以接触的加速度也仅仅是直线运动的加速度。大学物理中将研究对象扩展到了曲线运动，因此，加速度的范围也随之扩大。</p><h3 id="切向加速度">切向加速度</h3><h3 id="法向加速度">法向加速度</h3><h2 id="力矩">力矩</h2><p>  力矩是改变刚体在转动中角速度的物理量，为位置矢量与作用力的乘积，即：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>M</mi><mo>⃗</mo></mover><mo>=</mo><mover accent="true"><mi>r</mi><mo>⃗</mo></mover><mo>×</mo><mover accent="true"><mi>F</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec M = \vec r \times \vec F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79733em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span></p><p> 力矩所做的功为力矩与转过角度的乘积</p><h2 id="转动惯量">转动惯量</h2><h2 id="角动量">角动量</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理 </tag>
            
            <tag> 补天 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三十六陂春水，白头想见江南</title>
      <link href="/2023/03/19/%E4%B8%89%E5%8D%81%E5%85%AD%E9%99%82%E6%98%A5%E6%B0%B4%EF%BC%8C%E7%99%BD%E5%A4%B4%E6%83%B3%E8%A7%81%E6%B1%9F%E5%8D%97/"/>
      <url>/2023/03/19/%E4%B8%89%E5%8D%81%E5%85%AD%E9%99%82%E6%98%A5%E6%B0%B4%EF%BC%8C%E7%99%BD%E5%A4%B4%E6%83%B3%E8%A7%81%E6%B1%9F%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p></p><span id="more"></span><blockquote><p>题西太一宫壁二首</p><p> 　王安石〔宋〕</p><p>柳叶鸣蜩绿暗，荷花落日红酣。<br>三十六陂春水，白头想见江南。</p><p>三十年前此地，父兄持我东西。<br>今日重来白首，欲寻陈迹都迷。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>望见南山</title>
      <link href="/2023/03/12/%E6%9C%9B%E8%A7%81%E5%8D%97%E5%B1%B1/"/>
      <url>/2023/03/12/%E6%9C%9B%E8%A7%81%E5%8D%97%E5%B1%B1/</url>
      
        <content type="html"><![CDATA[<p>  前些日子在操场，偶然望见南山。</p><span id="more"></span><p> 　南山就是终南山，也就是秦岭。陕西民俗学概论的老师上课时说，他十几岁从渭南初到西安读书时，城墙之外还是成片成片的麦地，从城里往南望，远远地就能看到南山。几十年过去，在他的潜意识中，城市的南边必定会有这样一座巍巍高山。</p><p>  在武侯中学的那一年，回家或者去学校的日子，有时候坐在车上就能看见秦岭从平原上陡然耸起——一年多前我从天津回来，在高铁上也有类似的感觉：上一秒透过窗户看见的还是宽阔的关中平原，远处就是西安城里的高楼。不及眨眼的功夫，列车就钻进了隧道，外面黑乎乎一片，车窗上只剩下了车里的倒影——像一堵铁青色的墙壁。</p><p>  那时我常常望着北边发呆，有时在草稿纸上写着“西北望长安，可怜无数山”。不过“西北”并不准确，不论是西安还是北京，都在我之东北。方向虽然不对，但秦岭却总是真的铁青着脸。孤身一人身处异乡，日复一日的练习，独来独往的生活，孤独像冰原上的寒冷一样侵蚀着内心。</p><p>  好在落日算是为数不多的慰藉了。吃过下午饭走在天桥上，向西一望就能看见溏心蛋黄一样的太阳缓缓沉入秦岭巴山的山谷之中。不知道为何，总觉得这里的晚霞比别处都要浓厚，像晕开的丙烯颜料，逐渐涂满整个天空。</p><p>  人总是由无数的过往构建起来的，偶然看见秦岭，想起一些往事，所以记录下来。顺便一提，和舍友去了灞河看夕阳，又想起和朋友在汉江边骑车的日子，才切身体会到吴桐说的那句“此景不独钱江有，只是汉山不可期”。</p><p align = right> 3月19日于学校 </p><p></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银杏树</title>
      <link href="/2023/02/28/%E9%93%B6%E6%9D%8F%E6%A0%91/"/>
      <url>/2023/02/28/%E9%93%B6%E6%9D%8F%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>  老家院子的一角，有一棵合抱粗的银杏树，是父亲十几岁时栽下的。树干歪歪斜斜地倒向一边，虽然算不上挺拔，但起码可以说是个伸懒腰的巨人，把粗壮的臂膀伸向四面八方。</p><span id="more"></span><p>  记忆中，银杏永远迸发出着无穷的生命力。盛夏时节，肥厚翠绿的银杏叶密密麻麻地挤在枝条上，遮住毒辣的日光。树下，浓荫如墨，我常在其中玩耍，偶尔一阵清风吹过，便是夏天最极致的享受。即便是在肃杀的冬日，黄叶凋尽，错综复杂的枝杈也在冷风中巍然不动。落叶覆盖的泥土之下，不知有多少虬龙一样的根系狠狠钻向地心，贪婪地吮吸大地的养分。<br>　<br>  四年级的寒假，父亲用麻绳和木板在树枝上栓了一个秋千，我坐在上面读着保尔的故事。十年之后，我在书架里偶然发现爷爷写在笔记本扉页上那句保尔的名言。落款是1965年，算起来那年他19岁。如今我也19岁，翻阅58年前的笔记时，我在想象爷爷年轻时的经历。那么十年前，爷爷见到我手中那本熟悉的书时，也曾想起那个年代吗？</p><p>  初中的一个周末，我发现院子一边堆着好几根银杏树枝，青涩的银杏果挂得满满当当。我大为不解，父亲说，果子太多，把树枝压断了。我想起不久前刚下了暴雨，于是想象，那个骤雨猝至的夜晚，也许还伴着狂风，本已沉重不堪的枝头在风雨的呼啸中悄然断裂。几个月之后，我走进放杂物的房间，角落的两口棺材立刻吸引了我的目光，棺材表面的黑漆光可鉴人，搭在上面的红布颜色尚鲜，看来是做成不久。看着红布，我想起小学时，家门前的马路上一位妇人骑车摔倒，不幸殒命于紧随其后的货车轮下。后来路两旁的人家纷纷在门楣系一条红布。是了，对于爷爷奶奶而言，死亡，并不是一件太遥远的事情。想到这里，我不禁鼻头一酸。</p><p>  初三那年，奶奶的眼睛突然看不见了，手也抖得厉害。父亲带奶奶去看病，我便回不了家，好几个周末我都是在外公家度过。外公家后面的梁上，可以看到很远，我一个人望着远处的白点——那都是人家的房子——想着奶奶的病会好吗。从冬天到夏天，经过反反复复的治疗，奶奶的眼睛能看见了。可直到现在，手还是抖得厉害，吃饭的时候，连碗都端不稳。去年12月放开之后，外婆的身体也每况愈下。过年之前住了好久院，回家之后生活也不能自理，几个女儿日夜照料，才算安稳过了个年。我来学校之前，外婆的身体已恢复到接近往日的水平，可最近（3.1）听家里人说，又要住院手术了。</p><p>  上高中以后，父亲和姑父觉得院子边的树太多，挡住了阳光，地上容易生青苔，万一老人摔倒，麻烦事就没完没了。于是一顿大刀阔斧，锯断了银杏所有的粗枝，只留了几根细弱的枝条。同时砍倒了银杏一旁的玉兰和院子另一角的桂花。玉兰的叶子又硬又大，小时候，我喜欢把玉兰的叶子当作扇子。到了秋天，金黄的银杏叶铺满地面，轻轻摇一摇桂花树，晚霞颜色一般的桂花雨一样落下来。冬天，围在火炉边聊天看电视，父亲总喜欢烤些银杏果，不过口语里一般叫做白果。这些东西以后大概很难见到了，但如果这几棵树没有遭此厄运，也许我也再没有时间和精力像小时候一样流连其中了吧。</p><p>  今年春节回去，我再次走进放杂物的房间，棺材已经落满了灰，红布也有些褪色，没有初见时那样扎眼。走出来又望见院子角落，光秃秃的银杏孤零零地立着，砍断手臂的伤痕历历在目。然而，这几年间，断臂之处已经生出了新枝，还在寒风中轻轻摆动。是了，土壤之下，她的根系还在努力地钻着，甚至比从前钻得更深了。</p><p align = "right"> 2023年2月9日于家中 </p><p align = "right"> 3月1日修改于学校 </p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
